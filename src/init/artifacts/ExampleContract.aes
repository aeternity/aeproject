@compiler >= 6

include "./lib/ExampleLibrary.aes"

contract CryptoHamster =
   datatype event = NewHamster(indexed int, string, hash)

   record state = { hamsters : map(string, hash), next_id : int }

   stateful entrypoint init() = { hamsters = {}, next_id = 0 }

   entrypoint nameExists(name: string) : bool =
      Map.member(name, state.hamsters)

   stateful entrypoint createHamster(hamsterName: string) =
      require(!nameExists(hamsterName), "Name is already taken")
      createHamsterByNameDNA(hamsterName, generateDNA(hamsterName))
   
   entrypoint getHamsterDNA(hamsterName: string) : hash =
      require(nameExists(hamsterName), "Hamster does not exist!")
      state.hamsters[hamsterName]

   stateful function createHamsterByNameDNA(name: string, dna: hash) =
      put(state{hamsters[name] = dna, next_id = (state.next_id + 1)})
      Chain.event(NewHamster(state.next_id, name, dna))
 
   function generateDNA(name : string) : hash =
      ExampleHelpers.getDNA(name)
